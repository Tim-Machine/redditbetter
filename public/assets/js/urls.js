// Generated by CoffeeScript 1.6.2
var externalUrl, imageurl, redditurl, urls, video,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

urls = (function() {
  function urls(domain, link, title) {
    instance;
    var instance;

    switch (domain) {
      case "imgur.com":
        instance = new imageurl(link, title);
        break;
      case "i.imgur.com":
        instance = new imageurl(link, title);
        break;
      case "quickmeme.com":
        instance = new imageurl(link, title);
        break;
      case "qkme.me":
        instance = new imageurl(link, title);
        break;
      case "youtube.com":
        instance = new video(link, title, 'yt');
        break;
      case "vimeo.com":
        instance = new video(link, title, "vi");
        break;
      case "self.AskReddit":
        instance = new redditurl(link, title);
        break;
      default:
        instance = new externalUrl(link, title);
    }
    return instance;
  }

  return urls;

})();

redditurl = (function() {
  function redditurl(link) {
    this.link = link;
  }

  return redditurl;

})();

externalUrl = (function() {
  function externalUrl(link, title) {
    this.buildview = __bind(this.buildview, this);
    var data;

    this.link = link;
    this.title = title;
    return data = [this.buildview(), this.title];
  }

  externalUrl.prototype.buildview = function() {
    return " <iframe src=\"" + this.link + "\" seamless></iframe>";
  };

  return externalUrl;

})();

imageurl = (function() {
  function imageurl(link, title) {
    var data;

    this.link = link;
    this.title = title;
    data = [this.buildview(this.link), this.title];
    return data;
  }

  imageurl.prototype.buildview = function(link) {
    return "<img class=\"onlyImg\" src='" + link + "'  > ";
  };

  return imageurl;

})();

video = (function() {
  function video(link, title, provider) {
    var data;

    this.link = link;
    this.width = $("#modalBody").width();
    this.height = this.calHeight(this.width);
    this.provider = provider;
    return data = [this.buildview(), this.title];
  }

  video.prototype.calHeight = function() {
    return this.height * 9 / 16;
  };

  video.prototype.buildview = function() {
    var data;

    data = "";
    switch (this.provider) {
      case 'vi':
        data = "''			<iframe 			src=\"http://player.vimeo.com/video/" + (this.getId()) + "\" 			width=\"" + this.width + "\" 			height=\"" + this.height + "\" 			frameborder=\"0\" 			webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>''";
    }
    return data;
  };

  video.prototype.getId = function() {
    var arr;

    arr = this.link.split("/");
    return arr[arr.length - 1];
  };

  return video;

})();
